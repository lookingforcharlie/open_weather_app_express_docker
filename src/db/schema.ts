import { sql } from 'drizzle-orm'
import { integer, sqliteTable, text } from 'drizzle-orm/sqlite-core'
import { createInsertSchema, createSelectSchema } from 'drizzle-zod'

// sqlite column types docs: https://orm.drizzle.team/docs/column-types/sqlite

// const defaultNow = sql`(cast((julianday('now') - 2440587.5) * 86400000 as integer))`

const defaultNow = sql`(strftime('%s', 'now'))` // Unix seconds

// In sqlite, there is no boolean type, so we use integer with 0 or 1 to represent boolean
// In sqlite, there is no timestamp type
export const searchHistory = sqliteTable('search_history', {
  // specify the column name and the type
  id: integer('id', { mode: 'number' }).primaryKey({ autoIncrement: true }),
  cityName: text('name').notNull(),
  createdAt: integer('created_at', { mode: 'timestamp' }).default(defaultNow),
})

export const selectSearchHistorySchema = createSelectSchema(searchHistory)

// use this schema to validate the incoming request body before we insert it into the database
// id, createdAt are not needed in the request body, that will be generated by the database
export const insertSearchHistorySchema = createInsertSchema(searchHistory, {
  cityName: (cityName) => cityName.min(1).max(255),
}).omit({
  id: true,
  createdAt: true,
})
